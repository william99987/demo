version: "3.8"

services:
  redis:
    image: docker.1ms.run/redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: docker.1ms.run/mysql:latest
    container_name: mysql-container
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: docker.1ms.run/nginx:latest
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - app

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: demo-container
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - redis
      - mysql

networks:
  app-network:
    driver: bridge
